AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Drawing with DynamoDB SAM Template

Globals:
  Function:
    Timeout: 30

Resources:
  PutDrawingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: put_drawing/
      Handler: app.lambda_handler
      Runtime: python3.8
      FunctionName: PutDrawing
      Policies:
      - Statement:
        - Sid: PutDrawingFunctionPolicy
          Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:BatchWriteItem
          Resource: '*'
      Events:
        PutDrawing:
          Type: Api
          Properties:
            Path: /putDrawing
            Method: post
            RestApiId: !Ref DrawingWithDynamoDBApi
  GetDrawingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_drawing/
      Handler: app.lambda_handler
      Runtime: python3.8
      FunctionName: GetDrawing
      Policies:
      - Statement:
        - Sid: GetDrawingPolicy
          Effect: Allow
          Action:
            - dynamodb:Scan
          Resource: '*'
      Events:
        GetDrawing:
          Type: Api
          Properties:
            Path: /getDrawing
            Method: post
            RestApiId: !Ref DrawingWithDynamoDBApi
  GetAllDrawingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_all_drawings/
      Handler: app.lambda_handler
      Runtime: python3.8
      FunctionName: GetAllDrawings
      Policies:
      - Statement:
        - Sid: GetAllDrawingsPolicy
          Effect: Allow
          Action:
            - dynamodb:Scan
          Resource: '*'
      Events:
        GetAllDrawings:
          Type: Api
          Properties:
            Path: /getAllDrawings
            Method: get
            RestApiId: !Ref DrawingWithDynamoDBApi
  DeleteDrawingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: delete_drawing/
      Handler: app.lambda_handler
      Runtime: python3.8
      FunctionName: DeleteDrawing
      Policies:
      - Statement:
        - Sid: DeleteDrawingPolicy
          Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:DeleteItem
            - dynamodb:BatchWriteItem
          Resource: '*'
      Events:
        GetAllDrawings:
          Type: Api
          Properties:
            Path: /deleteDrawing
            Method: delete
            RestApiId: !Ref DrawingWithDynamoDBApi
  DrawingWithDynamoDBApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: DrawingWithDynamoDBApi
      StageName: Prod
      Cors:
        AllowOrigin: "'*'"
        AllowHeaders: "'Content-Type'"
        AllowMethods: "'GET,POST,DELETE,OPTIONS'"
  DrawingsMetadataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions: 
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema: 
        - AttributeName: id
          KeyType: HASH
      TableName: drawings_metadata
  DrawingsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions: 
        - AttributeName: id
          AttributeType: S
        - AttributeName: stroke_num
          AttributeType: N
      BillingMode: PAY_PER_REQUEST
      KeySchema: 
        - AttributeName: id
          KeyType: HASH
        - AttributeName: stroke_num
          KeyType: RANGE
      TableName: drawings


Outputs:
  DrawWithDynamodbApi:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${DrawingWithDynamoDBApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
